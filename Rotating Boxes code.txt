unsigned id = 1;

	Mesh boxMesh;
	Mesh sphereMesh;

	GeometryGenerator::CreateBox(1.0f, 1.0f, 1.0f, boxMesh);
	GeometryGenerator::CreateGeosphere(0.5f, 3, sphereMesh);

	for (int boxX = 0; boxX < 7; boxX++)
	{
		for (int boxY = 0; boxY < 7; boxY++)
		{
			for (int boxZ = 0; boxZ < 7; boxZ++)
			{
				ActorPtr newBox = ActorPtr(new Actor(id++));
	
				MeshRenderComponent* boxRenderer = new MeshRenderComponent(boxMesh, mpVertexShader, mpPixelShader);
				TransformComponent* boxTransform = new TransformComponent(Vector3(10.0f * boxX, 10.0f * boxY, 10.0f * boxZ), Vector3(), Vector3(1.0f));
				RotationAnimatorComponent* boxRotator = new RotationAnimatorComponent(XMFLOAT3(0.0f, 1.0f, 0.0f));

				newBox->addComponent(ActorComponentPtr(boxRenderer));
				newBox->addComponent(ActorComponentPtr(boxTransform));
				newBox->addComponent(ActorComponentPtr(boxRotator));

				mpScene->addChild(newBox); 

				ActorPtr lastChild = newBox;

				for (int i = 0; i < 5; i++)
				{
					ActorPtr childSphere = ActorPtr(new Actor(id++));

					MeshRenderComponent* boxRenderer2 = new MeshRenderComponent(boxMesh, mpVertexShader, mpPixelShader);
					TransformComponent* childTransform = new TransformComponent(Vector3(2.0f, 0.0f, 0.0f), Vector3(), Vector3(0.7f));
					RotationAnimatorComponent* rotator = new RotationAnimatorComponent(XMFLOAT3(0.0f, 1.0f, 0.0f));
			

					childSphere->addComponent(ActorComponentPtr(boxRenderer2));
					childSphere->addComponent(ActorComponentPtr(childTransform));
					childSphere->addComponent(ActorComponentPtr(rotator));

					lastChild->addChild(childSphere);

					lastChild = childSphere;
				}

				lastChild = newBox;
				for (int i = 0; i < 5; i++)
				{
					ActorPtr childBox = ActorPtr(new Actor(id++));

					MeshRenderComponent* boxRenderer2 = new MeshRenderComponent(boxMesh, mpVertexShader, mpPixelShader);
					TransformComponent* childTransform = new TransformComponent(Vector3(-2.0f, 0.0f, 0.0f), Vector3(), Vector3(0.7f));
					RotationAnimatorComponent* rotator = new RotationAnimatorComponent(XMFLOAT3(0.0f, 1.0f, 0.0f));
			

					childBox->addComponent(ActorComponentPtr(boxRenderer2));
					childBox->addComponent(ActorComponentPtr(childTransform));
					childBox->addComponent(ActorComponentPtr(rotator));

					lastChild->addChild(childBox);

					lastChild = childBox;
				}

				lastChild = newBox;
				for (int i = 0; i < 5; i++)
				{
					ActorPtr childBox = ActorPtr(new Actor(id++));

					MeshRenderComponent* boxRenderer2 = new MeshRenderComponent(boxMesh, mpVertexShader, mpPixelShader);
					TransformComponent* childTransform = new TransformComponent(Vector3(0.0f, 2.0f, 0.0f), Vector3(), Vector3(0.7f));
					RotationAnimatorComponent* rotator = new RotationAnimatorComponent(XMFLOAT3(0.0f, 1.0f, 1.0f));
			

					childBox->addComponent(ActorComponentPtr(boxRenderer2));
					childBox->addComponent(ActorComponentPtr(childTransform));
					childBox->addComponent(ActorComponentPtr(rotator));

					lastChild->addChild(childBox);

					lastChild = childBox;
				}

				lastChild = newBox;
				for (int i = 0; i < 5; i++)
				{
					ActorPtr childBox = ActorPtr(new Actor(id++));

					MeshRenderComponent* boxRenderer2 = new MeshRenderComponent(boxMesh, mpVertexShader, mpPixelShader);
					TransformComponent* childTransform = new TransformComponent(Vector3(0.0f, -2.0f, 0.0f), Vector3(), Vector3(0.7f));
					RotationAnimatorComponent* rotator = new RotationAnimatorComponent(XMFLOAT3(0.0f, 1.0f, 1.0f));
			

					childBox->addComponent(ActorComponentPtr(boxRenderer2));
					childBox->addComponent(ActorComponentPtr(childTransform));
					childBox->addComponent(ActorComponentPtr(rotator));

					lastChild->addChild(childBox);

					lastChild = childBox;
				}

				lastChild = newBox;
				for (int i = 0; i < 5; i++)
				{
					ActorPtr childBox = ActorPtr(new Actor(id++));

					MeshRenderComponent* boxRenderer2 = new MeshRenderComponent(boxMesh, mpVertexShader, mpPixelShader);
					TransformComponent* childTransform = new TransformComponent(Vector3(0.0f, 0.0f, 2.0f), Vector3(), Vector3(0.7f));
					RotationAnimatorComponent* rotator = new RotationAnimatorComponent(XMFLOAT3(0.0f, 1.0f, 0.0f));
			

					childBox->addComponent(ActorComponentPtr(boxRenderer2));
					childBox->addComponent(ActorComponentPtr(childTransform));
					childBox->addComponent(ActorComponentPtr(rotator));

					lastChild->addChild(childBox);

					lastChild = childBox;
				}

				lastChild = newBox;
				for (int i = 0; i < 5; i++)
				{
					ActorPtr childBox = ActorPtr(new Actor(id++));

					MeshRenderComponent* boxRenderer2 = new MeshRenderComponent(boxMesh, mpVertexShader, mpPixelShader);
					TransformComponent* childTransform = new TransformComponent(Vector3(0.0f, 0.0f, -2.0f), Vector3(), Vector3(0.7f));
					RotationAnimatorComponent* rotator = new RotationAnimatorComponent(XMFLOAT3(0.0f, 1.0f, 0.0f));
			

					childBox->addComponent(ActorComponentPtr(boxRenderer2));
					childBox->addComponent(ActorComponentPtr(childTransform));
					childBox->addComponent(ActorComponentPtr(rotator));

					lastChild->addChild(childBox);

					lastChild = childBox;
				}
			}
		}
	}